% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KTU2.R
\name{ktusp}
\alias{ktusp}
\title{Splitting KTU algorithm}
\usage{
ktusp(
  repseq,
  feature.table = NULL,
  write.fasta = TRUE,
  split_tree_init = 5,
  split_lwrlim = 10000,
  split_reassemble = 1000,
  cores = 1,
  ...
)
}
\arguments{
\item{repseq}{The fasta file path}

\item{feature.table}{(optional) 'data.frame' formated ASV/OTU table. Note: first column must be ID.}

\item{write.fasta}{(optional) write out a representative KTU sequence fasta file. Logical (output with ktu-sequences.fasta) or characters+.fasta (user-defined names).}

\item{split_tree_init}{Initial numbers for cutting kmer tree, default is 5}

\item{split_lwrlim}{Split kmer subtrees if tree tips > n, n default is 10000}

\item{split_reassemble}{Reassemble tree tips when subtrees are too small, default is 1000}

\item{cores}{Numbers of CPUs}

\item{...}{other parameters of `klustering` function}
}
\value{
KTU.table Aggregated KTU table

ReqSeq Representative KTU sequences

kmer.table Tetranucleotide present score table or tetranucleotide frequency table

clusters K-clusters of input features
}
\description{
Implement KTU algorithm with subsisting a large tetranucleotide frequency table by splitting kmer tree
}
